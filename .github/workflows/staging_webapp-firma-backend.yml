# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - webapp-firma-backend

on:
  push:
    branches:
      - staging
  workflow_dispatch:

jobs:
  build:
    # runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            . 
            !venv/

  deploy:
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
          
      - name: Create env file
        run: |
          touch .env
          echo ODOO_URL=${ODOO_URL} >> .env
          echo ODOO_API_KEY=${ODOO_API_KEY} >> .env
          echo ODOO_USERNAME=${ODOO_USERNAME} >> .env
          echo ODOO_PASSWORD=${ODOO_PASSWORD} >> .env
          echo ODOO_DATABASE=${ODOO_DATABASE} >> .env
          echo SECRET_KEY=${SECRET_KEY} >> .env
          echo POSTGRES_DB=${POSTGRES_DB} >> .env
          echo POSTGRES_USER=${POSTGRES_USER} >> .env
          echo POSTGRES_PASSWORD=${POSTGRES_PASSWORD} >> .env
          echo POSTGRES_HOST=${POSTGRES_HOST} >> .env
          echo POSTGRES_PORT=${POSTGRES_PORT} >> .env
          echo AZURE_STORAGE_ACCOUNT_NAME=${AZURE_STORAGE_ACCOUNT_NAME} >> .env
          echo AZURE_STORAGE_CONTAINER_NAME=${AZURE_STORAGE_CONTAINER_NAME} >> .env
          echo AZURE_SECRET_KEY=${AZURE_SECRET_KEY} >> .env
          echo AZURE_STORAGE_URL=${AZURE_STORAGE_URL} >> .env
          echo CELERY_BROKER=$CELERY_BROKER} >> .env
          echo CELERY_BACKEND=${CELERY_BACKEND} >> .env
          cat .env
        env:
          ODOO_URL: ${{ secrets.ODOO_URL }}
          ODOO_API_KEY: ${{ secrets.API_KEY }}
          ODOO_USERNAME: ${{ secrets.ODOO_USERNAME }}
          ODOO_PASSWORD: ${{ secrets.ODOO_PASSWORD }}
          ODOO_DATABASE: ${{ secrets.ODOO_DATABASE }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
          AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
          AZURE_SECRET_KEY: ${{ secrets.AZURE_SECRET_KEY }}
          AZURE_STORAGE_URL: ${{ secrets.AZURE_STORAGE_URL }}
          CELERY_BROKER: ${{ secrets.CELERY_BROKER }}
          CELERY_BACKEND: ${{ secrets.CELERY_BACKEND }}
          
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'webapp-firma-backend'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_3B16F4F495CD419C86A620697E97CD21 }}
